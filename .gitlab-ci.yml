image: harbor.uni-muenster.de/proxy-docker/library/node:latest

stages:
  - test
  - build
  - deploy

.default_rules_tag:
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+.\d+.\d+/ # describe how your version tags look like!

build-and-run-tests:
  stage: test
  cache:
    key:
      files:
        - package-lock.json
      prefix: npm
    paths:
      - node_modules/
  script:
    - npm install
    - npm run build
    - npm run test
  artifacts:
    paths:
      - dist

docs:
  stage: build
  cache:
    key:
      files:
        - package-lock.json
      prefix: npm
    paths:
      - node_modules/
  script:
    - npm run doc
  artifacts:
    paths:
      - docs

# push to npm package registry
deploy:
  stage: deploy
  script:
    - echo "@scdh:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - cat .npmrc
    - npm --no-git-tag-version version $CI_COMMIT_TAG
    - npm publish
  rules:
    - !reference [ .default_rules_tag, rules ]

deploy webjar:
  stage: deploy
  variables:
    UPLOAD_LOCATION: $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/maven/de/wwu/scdh/seed/seed-frontend-components-webjar/$CI_COMMIT_TAG/seed-frontend-components-webjar-$CI_COMMIT_TAG.jar
    UPLOAD_FILE: target/seed-frontend-components-webjar-$CI_COMMIT_TAG.jar
    HEADER: "JOB-TOKEN: $CI_JOB_TOKEN"
  before_script:
    - apt-get update
    - apt-get -y install zip
  script:
    - npm run webjar
    - curl --request PUT --upload-file $UPLOAD_FILE --header $HEADER $UPLOAD_LOCATION
  rules:
    - !reference [ .default_rules_tag, rules ]

pages:
  stage: deploy
  script:
    - ls -l
    - ls -l dist
    - mkdir -p public
    - cp -av --recursive dist/* public/
    - cp -av --recursive docs public/
    - ls -lR public
  artifacts:
    paths:
      - public
      - public/*
  needs:
    - docs
    - build-and-run-tests
  rules:
    - !reference [ .default_rules_tag, rules ]
